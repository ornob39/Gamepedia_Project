{"version":3,"sources":["./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/interceptors/http-headers.interceptor.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/http.service.ts","./src/app/homepage/homepage.component.html","./src/app/homepage/homepage.component.ts","./src/app/components/details/details.component.html","./src/app/components/details/details.component.ts","./src/app/components/game-tabs/game-tabs.component.html","./src/app/components/game-tabs/game-tabs.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/interceptors/http-errors.interceptor.ts","./src/app/navigation/sidenav/sidenav.component.ts","./src/app/navigation/sidenav/sidenav.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/auth.guard.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div fxFlex fxLayout fxLayoutAlign=\"center center\">\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"center  center\">\n        <section class=\"signup-form\">\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center  center\">\n                <mat-card class=\"container signup-card\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                    <mat-card-header appearance=\"fill\" class=\"card-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                        Please register using valid email and password\n                    </mat-card-header>\n                    <div class=\"col\">\n                        <mat-card-content>\n                            <form appearance=\"outline\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Enter Email</mat-label>\n                                    <input [(ngModel)]=\"registeredUserData.email\" name=\"email\" matInput type=\"email\" placeholder=\"Your email\" ngModel email required #emailInput=\"ngModel\" />\n                                    <mat-icon matSuffix>email</mat-icon>\n                                    <mat-error *ngIf=\"emailInput.hasError('required')\">Empty Email</mat-error>\n                                    <mat-error *ngIf=\"!emailInput.hasError('required')\">Invalid Email</mat-error>\n                                </mat-form-field>\n                                <mat-form-field appearance=\"outline\" hintLabel=\"Should be atleast 6 characters long\">\n                                    <mat-label>Enter Password</mat-label>\n                                    <input [(ngModel)]=\"registeredUserData.password\" name=\"password\" matInput type=\"password\" placeholder=\"Your password\" ngModel required minLength=\"6\" #pwInput=\"ngModel\" />\n                                    <mat-icon matSuffix>password</mat-icon>\n                                    <mat-hint align=\"end\">{{ pwInput.value?.length }} / 6</mat-hint>\n                                    <mat-error>Small Password!</mat-error>\n                                </mat-form-field>\n\n                                <button (click)=\"registerUser()\" type=\"submit\" id=\"submit\" class=\"submit-btn\" mat-raised-button [disabled]=\"f.invalid\" style=\"margin-top: 20px\">\n                  Signup\n                </button>\n                            </form>\n                        </mat-card-content>\n                    </div>\n                </mat-card>\n            </div>\n        </section>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registeredUserData = { email: '', password: '' };\n\n  constructor(\n    private _auth: AuthService,\n    private _router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {}\n\n  registerUser() {\n    this._auth.registerUser(this.registeredUserData).subscribe(\n      (res) => {\n\n        localStorage.setItem('token', res.token);\n        this._snackBar.open('Signup Successful!', 'Clear', { duration: 3000 });\n        this._router.navigate(['/home']);\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  onSubmit(form: NgForm) {}\n}\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpHeadersInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        'x-rapidapi-key': 'e44f5d0df9msh4ef76cb13184d25p1c82d4jsn372f021cfb11',\r\n        'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\r\n      },\r\n      setParams: {\r\n        key: 'abe42c87cd464991914fa12b2482a324',\r\n      },\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(req, next) {\n    let authService = this.injector.get(AuthService);\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}`,\n      },\n    });\n\n    return next.handle(tokenizedReq);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL: 'https://rawg-video-games-database.p.rapidapi.com',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { APIResponse, Game } from 'src/app/model';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public sort: string;\n  public games: Array<Game>;\n  private routeSub: Subscription;\n  private gameSub: Subscription;\n\n  constructor(\n    private httpService: HttpService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.routeSub = this.activatedRoute.params.subscribe((params: Params) => {\n      if (params['game-search']) {\n        this.searchGames('metacrit', params['game-search']);\n      } else {\n        this.searchGames('metacrit');\n      }\n    });\n  }\n\n  async searchGames(sort: string, search?: string) {\n    this.gameSub = (await this.httpService.getGameList(sort, search)).subscribe(\n      (gameList: APIResponse<Game>) => {\n        this.games = gameList.results;\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  async openGameDetails(id: string): Promise<void> {\n    this.router.navigate(['details', id]);\n  }\n\n  async ngOnDestroy(): Promise<void> {\n    if (this.gameSub) {\n      this.gameSub.unsubscribe();\n    }\n\n    if (this.routeSub) {\n      this.routeSub.unsubscribe();\n    }\n  }\n}\n","<mat-form-field class=\"selector-form\" style=\"height: 50px\">\n    <mat-label class=\"selector-label\">Sort Games by</mat-label>\n    <mat-select class=\"select-panel\" panelClass=\"sort-select\" [(ngModel)]=\"sort\" (selectionChange)=\"searchGames(sort)\">\n        <mat-option value=\"name\" class=\"matoption\">Name</mat-option>\n        <mat-option class=\"matoption\" value=\"-released\">Released</mat-option>\n        <mat-option class=\"matoption\" value=\"-added\">Added</mat-option>\n        <mat-option class=\"matoption\" value=\"-created\">Created</mat-option>\n        <mat-option class=\"matoption\" value=\"-updated\">Updated</mat-option>\n        <mat-option class=\"matoption\" value=\"-rating\">Rating</mat-option>\n        <mat-option class=\"matoption\" value=\"metacritic\">Metacritic</mat-option>\n    </mat-select>\n</mat-form-field>\n\n<div class=\"container-fluid\">\n    <div class=\"games\">\n        <ng-container *ngFor=\"let game of games\">\n            <!-- adauga event ca sa putem vedea detalii despre joc (dupa id) -->\n            <div class=\"game\" (click)=\"openGameDetails(game.id)\">\n                <div class=\"game-thumb-container\">\n                    <img *ngIf=\"game.background_image\" src=\"{{ game.background_image }}\" alt=\"thumbnail\" class=\"game-thumbnail\" />\n                    <p *ngIf=\"!game.background_image\">No image</p>\n                </div>\n                <div class=\"game-description\">\n                    <p class=\"game-name\">{{ game.name }}</p>\n                    <div class=\"game-platforms\">\n                        <img *ngFor=\"let gamePlatform of game.parent_platforms\" class=\"game-platform\" src=\"assets/images/platforms/{{ gamePlatform.platform.slug }}.svg\" alt=\"{{ gamePlatform.platform.slug }}\" />\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment as env } from 'src/environments/environment';\nimport { APIResponse, Game } from '../model';\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  constructor(private http: HttpClient) {}\n\n  getGameList(\n    ordering: string,\n    search?: string\n  ): Observable<APIResponse<Game>> {\n    let params = new HttpParams().set('ordering', ordering);\n\n    if (search) {\n      params = new HttpParams().set('ordering', ordering).set('search', search);\n    }\n\n    return this.http.get<APIResponse<Game>>(`${env.BASE_URL}/games`, {\n      params: params,\n    });\n  }\n\n  getGameDetails(id: string): Observable<Game> {\n    const gameInfoRequest = this.http.get(`${env.BASE_URL}/games/${id}`);\n    console.log('gameInfo --- ' + gameInfoRequest);\n    const gameTrailersRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/movies`\n    );\n    console.log('gameTrailers --- ' + gameTrailersRequest);\n    const gameScreenshotsRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/screenshots`\n    );\n    console.log('gameScreenShots --- ' + gameScreenshotsRequest);\n\n    return forkJoin({\n      gameInfoRequest,\n      gameScreenshotsRequest,\n      gameTrailersRequest,\n    }).pipe(\n      map((resp: any) => {\n        return {\n          ...resp['gameInfoRequest'],\n          screenshots: resp['gameScreenshotsRequest']?.results,\n          trailers: resp['gameTrailersRequest']?.results,\n        };\n      })\n    );\n  }\n}\n","<div class=\"container-fluid\"></div>\r\n\r\n<div class=\"container\">\r\n    <div class=\"col\">\r\n        <mat-card class=\"card\">\r\n            <div class=\"col\">\r\n                <!-- Newly Released Games -->\r\n                <mat-card-header class=\"card-header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <h2 class=\"header-content\">New and trending</h2>\r\n                </mat-card-header>\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-card-content class=\"slide-image\">\r\n                    <mat-carousel maintainAspectRatio=\"true\" timings=\"500ms ease-in\" [autoplay]=\"true\" interval=\"5000\" color=\"primary\" maxWidth=\"auto\" proportion=\"40\" slides=\"5\" [loop]=\"true\" [hideArrows]=\"true\" [hideIndicators]=\"true\" [useKeyboard]=\"true\" [useMouseWheel]=\"true\"\r\n                        orientation=\"ltr\">\r\n                        <mat-carousel-slide #matCarouselSlide *ngFor=\"let slide of slides; let i = index\" [image]=\"slide.image\" overlayColor=\"#00000040\" [hideOverlay]=\"false\">\r\n                            <div class=\"col\">\r\n                                <mat-card-footer fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"card-footer\">\r\n                                    <button fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                    <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                      {{ new_titles[i] }}\r\n                    </h2>\r\n                  </button>\r\n                                </mat-card-footer>\r\n                                <mat-card-footer (click)=\"openGameDetails(new_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"col\" fxLayoutAlign=\"end end\" class=\"card-footer\">\r\n                                    <button (click)=\"openGameDetails(new_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                    <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                      Show Details\r\n                    </h2>\r\n                  </button>\r\n                                </mat-card-footer>\r\n                            </div>\r\n                        </mat-carousel-slide>\r\n                    </mat-carousel>\r\n                </mat-card-content>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"col\">\r\n        <mat-card class=\"card\">\r\n            <!-- Best of the year -->\r\n            <mat-card-header class=\"card-header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <h2 class=\"header-content\">Popular in 2021</h2>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"slide-image\">\r\n                <mat-carousel maintainAspectRatio=\"true\" timings=\"500ms ease-in\" [autoplay]=\"true\" interval=\"5000\" color=\"primary\" maxWidth=\"auto\" proportion=\"40\" slides=\"5\" [loop]=\"true\" [hideArrows]=\"true\" [hideIndicators]=\"true\" [useKeyboard]=\"true\" [useMouseWheel]=\"true\"\r\n                    orientation=\"ltr\">\r\n                    <mat-carousel-slide #matCarouselSlide *ngFor=\"let slide of slides_best; let i = index\" [image]=\"slide.image\" overlayColor=\"#00000040\" [hideOverlay]=\"false\">\r\n                        <mat-card-footer (click)=\"openGameDetails(best_titles[i])\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"card-footer\">\r\n                            <button (click)=\"openGameDetails(best_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                  {{ best_titles[i] }}\r\n                </h2>\r\n              </button>\r\n                        </mat-card-footer>\r\n                        <mat-card-footer (click)=\"openGameDetails(best_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"col\" fxLayoutAlign=\"end end\" class=\"card-footer\">\r\n                            <button (click)=\"openGameDetails(best_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                  Show Details\r\n                </h2>\r\n              </button>\r\n                        </mat-card-footer>\r\n                    </mat-carousel-slide>\r\n                </mat-carousel>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"col\">\r\n        <mat-card class=\"card\">\r\n            <!-- Top 10 all time -->\r\n            <mat-card-header class=\"card-header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <h2 class=\"header-content\">All Time top 10</h2>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"slide-image\">\r\n                <mat-carousel maintainAspectRatio=\"true\" timings=\"500ms ease-in\" [autoplay]=\"true\" interval=\"5000\" color=\"primary\" maxWidth=\"auto\" proportion=\"40\" slides=\"10\" [loop]=\"true\" [hideArrows]=\"true\" [hideIndicators]=\"true\" [useKeyboard]=\"true\" [useMouseWheel]=\"true\"\r\n                    orientation=\"ltr\">\r\n                    <mat-carousel-slide #matCarouselSlide *ngFor=\"let slide of slides_10; let i = index\" [image]=\"slide.image\" overlayColor=\"#00000040\" [hideOverlay]=\"false\">\r\n                        <mat-card-footer (click)=\"openGameDetails(top10_titles[i])\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"card-footer\">\r\n                            <button (click)=\"openGameDetails(top10_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                  {{ top10_titles[i] }}\r\n                </h2>\r\n              </button>\r\n                        </mat-card-footer>\r\n                        <mat-card-footer (click)=\"openGameDetails(top10_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"col\" fxLayoutAlign=\"end end\" class=\"card-footer\">\r\n                            <button (click)=\"openGameDetails(top10_titles[i])\" (click)=\"_authService.notLogged()\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"footer-btn\" mat-raised-button style=\"background-color: #ffffff00\">\r\n                <h2 style=\"text-transform: uppercase; margin: auto\">\r\n                  Show Details\r\n                </h2>\r\n              </button>\r\n                        </mat-card-footer>\r\n                    </mat-carousel-slide>\r\n                </mat-carousel>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss'],\n})\nexport class HomepageComponent implements OnInit {\n  constructor(private router: Router, public _authService: AuthService) {}\n\n  ngOnInit(): void {}\n\n  //New Released\n  slides = [\n    { image: '../../assets/Homepage/Slides/new/new1.jpg' },\n    { image: '../../assets/Homepage/Slides/new/new2.jpg' },\n    { image: '../../assets/Homepage/Slides/new/new3.jpg' },\n    { image: '../../assets/Homepage/Slides/new/new4jpg.jpg' },\n    { image: '../../assets/Homepage/Slides/new/new5.jpg' },\n  ];\n  new_titles = [\n    'vampire-the-masquerade-bloodlines-2',\n    'outriders',\n    'halo-infinite',\n    'resident-evil-village',\n    'stalker-2',\n  ];\n\n  //Best of the year\n  slides_best = [\n    { image: '../../assets/Homepage/Slides/best/1.png' },\n    { image: '../../assets/Homepage/Slides/best/2.jpg' },\n    { image: '../../assets/Homepage/Slides/best/3.jpg' },\n    { image: '../../assets/Homepage/Slides/best/4.jpg' },\n    { image: '../../assets/Homepage/Slides/best/5.png' },\n  ];\n\n  best_titles = [\n    'cyberpunk-2077',\n    'biomutant',\n    'hitman-3',\n    'far-cry-6',\n    'ghostwire-tokio',\n  ];\n\n  slides_10 = [\n    { image: '../../assets/Homepage/Slides/top10/1.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/2.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/3.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/4.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/5.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/6.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/7.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/8.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/9.jpg' },\n    { image: '../../assets/Homepage/Slides/top10/10.jpg' },\n  ];\n  top10_titles = [\n    'the-witcher-3-wild-hunt',\n    'the-last-of-us',\n    'the-legend-of-zelda-breath-of-the-wild',\n    'red-dead-redemption-2',\n    'god-of-war-2',\n    'uncharted-4-a-thiefs-end',\n    'half-life-2',\n    'grand-theft-auto-v',\n    'mafia-the-city-of-lost-heaven',\n    'dark-souls-iii',\n  ];\n\n  //Navigate to details\n  async openGameDetails(id: string): Promise<void> {\n    this.router.navigate(['details', id]);\n    console.log('clicked');\n  }\n}\n","<div class=\"details\">\n    <div class=\"game-banner\">\n        <img class=\"game-banner-img\" src=\"{{ game.background_image }}\" alt=\"background image\" />\n    </div>\n    <div class=\"game-content\">\n        <div class=\"details-wrapper\">\n            <div class=\"game-header\">\n                <h1 class=\"game-header-title\">{{ game.name }}</h1>\n                <h2 class=\"game-header-release-date\">\n                    Release: {{ game.released | date }}\n                </h2>\n                <p class=\"game-header-genres\">\n                    <span *ngFor=\"let genre of game.genres; let last = last\">{{ genre.name }}<span *ngIf=\"!last\">, </span></span>\n                </p>\n                <div class=\"game-gauge\" fxHide fxShow.gt-sm>\n                    <mwl-gauge class=\"two\" [max]=\"100\" [dialStartAngle]=\"170\" [dialEndAngle]=\"10\" [value]=\"gameRating\" [animated]=\"true\" [color]=\"getColor\" [animationDuration]=\"2\">\n                    </mwl-gauge>\n                    <a class=\"game-gauge-label\" target=\"_blank\" href=\"{{ game.metacritic_url }}\n          \">Metacritic</a\n          >\n        </div>\n      </div>\n\n      <app-game-tabs [game]=\"game\"></app-game-tabs>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { HttpService } from 'src/app/services/http.service';\nimport { Game } from 'src/app/model';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss'],\n})\nexport class DetailsComponent implements OnInit, OnDestroy {\n  gameRating = 0;\n  gameId: string;\n  game: Game;\n  routeSub: Subscription;\n  gameSub: Subscription;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private httpService: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSub = this.ActivatedRoute.params.subscribe((params: Params) => {\n      this.gameId = params['id'];\n      this.getGameDetails(this.gameId);\n    });\n  }\n\n  getGameDetails(id: string): void {\n    this.gameSub = this.httpService\n      .getGameDetails(id)\n      .subscribe((gameResp: Game) => {\n        this.game = gameResp;\n        setTimeout(() => {\n          this.gameRating = this.game.metacritic;\n        }, 1000);\n      });\n  }\n\n  getColor(value: number): string {\n    if (value > 75) {\n      return '#5ee432';\n    } else if (value > 50) {\n      return '#fffa50';\n    } else if (value > 30) {\n      return '#f7aa38';\n    } else {\n      return '#ef4655';\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gameSub) {\n      this.gameSub.unsubscribe;\n    }\n    if (this.routeSub) {\n      this.routeSub.unsubscribe;\n    }\n  }\n}\n","<div class=\"game-tabs\">\n    <mat-tab-group mat-align-tabs=\"start\" backgroundColor=\"primary\">\n        <mat-tab label=\"About\">\n            <p *ngIf=\"game.parent_platforms?.length\" class=\"game-tabs-par\">\n                Platfoms:\n                <span *ngFor=\"let game of game.parent_platforms; let last = last\">{{ game.platform.name }}<span *ngIf=\"!last\">, </span></span>\n            </p>\n            <p *ngIf=\"game.publishers?.length\" class=\"game-tabs-par\">\n                Publishers:\n                <span *ngFor=\"let publisher of game.publishers; let last = last\">{{ publisher.name }}<span *ngIf=\"!last\">, </span></span>\n            </p>\n            <p *ngIf=\"game.website\" class=\"game-tabs-par\">\n                Website:\n                <a class=\"game-tabs-link\" href=\"{{ game.website }}\" target=\"_blank\">{{\n          game.website\n        }}</a>\n            </p>\n            <hr />\n            <div *ngIf=\"game.description\" [innerHTML]=\"game.description\" class=\"game-description\"></div>\n            <p class=\"game-tabs-votes\">\n                <ng-container *ngFor=\"let votes of game.ratings\">\n                    <!-- afisam rating cu exceptional -->\n                    <span *ngIf=\"votes.title === 'exceptional'\">\n            <mat-icon class=\"game-tabs-votes-up\">thumb_up</mat-icon>\n            <!-- daca nu sunt voturi afisam 0 -->\n            <span class=\"game-tabs-votes-count\">{{ votes.count || 0 }}</span>\n                    </span>\n                    <!-- afisam rating cu skip -->\n                    <span *ngIf=\"votes.title === 'skip'\">\n            <mat-icon class=\"game-tabs-votes-down\">thumb_down</mat-icon>\n            <!-- daca nu sunt voturi afisam 0 -->\n            <span class=\"game-tabs-votes-count\">{{ votes.count || 0 }}</span>\n                    </span>\n                </ng-container>\n            </p>\n        </mat-tab>\n\n        <mat-tab label=\"Screenshots\" *ngIf=\"game.screenshots?.length\">\n            <img *ngFor=\"let screenshot of game.screenshots\" src=\"{{ screenshot.image }}\" class=\"game-screenshot\" alt=\"screenshot\" />\n        </mat-tab>\n        <mat-tab label=\"Trailers\" *ngIf=\"game.trailers?.length\">\n            <video class=\"game-trailer\" controls *ngFor=\"let trailer of game.trailers\">\n        <source src=\"{{ trailer.data?.max }}\" type=\"video/mp4\" />\n        your browser doesn't support video tag\n      </video>\n        </mat-tab>\n    </mat-tab-group>\n    <div></div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Game } from 'src/app/model';\n@Component({\n  selector: 'app-game-tabs',\n  templateUrl: './game-tabs.component.html',\n  styleUrls: ['./game-tabs.component.scss'],\n})\nexport class GameTabsComponent implements OnInit {\n  @Input() game: Game;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'gamestore';\n  constructor(private _authService: AuthService) {}\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidenav role=\"navigation\" mode=\"side\">\n        <app-sidenav (closeSidenav)=\"sidenav.close()\"></app-sidenav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <app-header (sidenavToggle)=\"sidenav.toggle()\"></app-header>\n        <main>\n            <!-- <app-post-create></app-post-create>\n            <app-post-list></app-post-list> -->\n            <router-outlet></router-outlet>\n        </main>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n//Forms\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { GaugeModule } from 'angular-gauge';\n//Flex Layout//\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n//MatModules//\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HttpHeadersInterceptor } from './interceptors/http-headers.interceptor';\nimport { HttpErrorsInterceptor } from './interceptors/http-errors.interceptor';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n//\n\n// Angular Bootstrap\n\nimport { MatCarouselModule } from '@ngbmodule/material-carousel';\n\n// App Components //\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { SidenavComponent } from './navigation/sidenav/sidenav.component';\nimport { HomepageComponent } from './homepage/homepage.component';\n//\n// For Authentication //\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { DetailsComponent } from './components/details/details.component';\nimport { GameTabsComponent } from './components/game-tabs/game-tabs.component';\n\n//\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchBarComponent,\n    HomeComponent,\n    RegisterComponent,\n    LoginComponent,\n    HeaderComponent,\n    SidenavComponent,\n    HomepageComponent,\n    DetailsComponent,\n    GameTabsComponent,\n  ],\n  imports: [\n    FlexLayoutModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    GaugeModule.forRoot(),\n    MatTabsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatCarouselModule.forRoot(),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpHeadersInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorsInterceptor,\n      multi: true,\n    },\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private _registerUrl = 'http://localhost:3000/api/register';\n  private _loginUrl = 'http://localhost:3000/api/login';\n  constructor(\n    private http: HttpClient,\n    private _router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  // Registration through POST method(email and password)\n  registerUser(user) {\n    return this.http.post<any>(this._registerUrl, user);\n  }\n  // Login through POST method(email and password)\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  //User Logout//\n\n  logoutUser() {\n    localStorage.removeItem('token');\n    this._router.navigate(['/default']);\n  }\n\n  //\n\n  //Snackbar//\n  notLogged() {\n    if (!!localStorage.getItem('token') == false) {\n      this._router.navigate(['/login']);\n      this._snackBar.open('Login to Access Website', 'Clear', {\n        duration: 3000,\n      });\n    }\n  }\n  notLoggedPromt() {\n    if (!!localStorage.getItem('token') == false) {\n      this._snackBar.open('Login to View More Contents', 'Clear', {\n        duration: 3000,\n      });\n    }\n  }\n\n  wrongPassword() {\n    if (!!localStorage.getItem('token') == false) {\n      this._snackBar.open('Wrong Credentials', 'Clear', {\n        duration: 3000,\n      });\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpErrorsInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((err) => {\r\n        console.log(err);\r\n        return observableThrowError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../../auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent implements OnInit {\n  @Output() closeSidenav = new EventEmitter<void>();\n  constructor(\n    public _authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n  onClose() {\n    this.closeSidenav.emit();\n  }\n  onLogout() {\n    this._snackBar.open('Logged Out', 'Clear', { duration: 3000 });\n  }\n}\n","<mat-nav-list class=\"site-nav\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayoutGap=\"10px\" style=\"margin-left: 16px; color: black\" style=\"margin-top: 20px !important; margin-left: 20px !important\">\n    <button class=\"site-nav\" mat-icon-button routerLink=\"/\" (click)=\"onClose()\">\n    <mat-icon class=\"nav-icon\" color=\"primary\">home</mat-icon>\n    Home\n  </button>\n    <!-- <button mat-icon-button routerLink=\"/re\" (click)=\"onClose()\">\n    <mat-icon class=\"nav-icon\" color=\"primary\">account_circle</mat-icon>\n    Signup\n  </button> -->\n    <button class=\"site-nav\" mat-icon-button routerLink=\"/login\" (click)=\"onClose()\">\n    <mat-icon class=\"nav-icon\" color=\"primary\">login</mat-icon>Login\n  </button>\n    <button class=\"site-nav\" mat-icon-button routerLink=\"/register\" (click)=\"onClose()\">\n    <mat-icon class=\"nav-icon\" color=\"primary\">account_box</mat-icon>Signup\n  </button>\n\n    <button class=\"site-nav\" mat-icon-button (click)=\"onLogout()\" (click)=\"onClose()\" (click)=\"_authService.logoutUser()\">\n    <mat-icon class=\"nav-icon\" color=\"primary\">logout</mat-icon>Logout\n  </button>\n</mat-nav-list>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  async onSubmit(form: NgForm) {\n    this.router.navigate(['search', form.value.search]);\n  }\n  async onPress() {\n    this.router.navigate(['']);\n  }\n  async userLogin() {\n    this.router.navigate(['/login']);\n  }\n  async userRegister() {\n    this.router.navigate(['/register']);\n  }\n}\n","<mat-toolbar fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <button mat-flat-button class=\"home-button\" (click)=\"onPress()\">Games</button>\n\n    <form class=\"search-form\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n        <input class=\"search-input\" matInput name=\"search\" ngModel placeholder=\"Search 500,000+ games\" />\n\n    </form>\n\n    <button class=\"login-button\" mat-raised-button (click)=\"userLogin()\">Login</button>\n\n    <button class=\"signup-button\" mat-raised-button (click)=\"userRegister()\">Signup</button>\n</mat-toolbar>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n// import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\n//\n// implements CanActivate, CanActivateChild, CanDeactivate<unknown>, CanLoad\n//\nexport class AuthGuard implements CanActivate {\n  constructor(private _authService: AuthService, private _router: Router) {}\n\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { HomeComponent } from 'src/app/components/home/home.component';\nimport { AuthService } from '../../auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Output() sidenavToggle = new EventEmitter<void>();\n  constructor(\n    private router: Router,\n    public _authService: AuthService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n  onToggleSidenav() {\n    this.sidenavToggle.emit();\n  }\n  async onSubmit(form: NgForm) {\n    this.router.navigate(['search', form.value.search]);\n  }\n  selected() {\n    this.router.navigate(['']);\n  }\n  onLogout() {\n    this._snackBar.open('Logged Out', 'Clear', { duration: 3000 });\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <div fxShow.xs fxShow.sm fxHide.gt-sm>\n        <button mat-icon-button (click)=\"onToggleSidenav()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    </div>\n    <div>\n        <button mat-raised-button color=\"primary\" routerLink=\"\">\n      <mat-icon>image_search</mat-icon> Gamepedia\n    </button>\n    </div>\n\n    <div fxFlex fxLayout fxLayoutAlign=\"flex-end center\" fxHide.xs fxHide.sm>\n        <ul fxLayout fxLayoutGap=\"20px\" class=\"navigation-items\">\n            <button class=\"header-button\" mat-raised-button color=\"primary\" (click)=\"_authService.notLogged()\" routerLink=\"/home\">\n        Home\n      </button>\n\n            <form class=\"search-form\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\" (ngSubmit)=\"_authService.notLogged()\">\n                <input class=\"search-input\" matInput name=\"search\" ngModel placeholder=\"Search 500,000+ games\" />\n\n                <button class=\"header-button\" mat-raised-button class=\"search-button\" color=\"primary\" (click)=\"_authService.notLogged()\">\n          Search\n        </button>\n            </form>\n\n            <button class=\"header-button\" mat-raised-button color=\"primary\" *ngIf=\"!_authService.loggedIn()\" routerLink=\"/login\">\n        Login\n      </button>\n            <button class=\"header-button\" mat-raised-button color=\"primary\" *ngIf=\"!_authService.loggedIn()\" routerLink=\"/register\">\n        Signup\n      </button>\n\n            <button class=\"header-button\" mat-raised-button color=\"primary\" *ngIf=\"_authService.loggedIn()\" (click)=\"onLogout()\" (click)=\"_authService.logoutUser()\" routerLink=\"\">\n        Logout\n      </button>\n        </ul>\n    </div>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { AuthGuard } from './auth.guard';\nconst routes: Routes = [\n  { path: 'default', component: HomepageComponent },\n  { path: '', component: HomepageComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  {\n    path: 'search/:game-search',\n    component: HomeComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'details/:id',\n    component: DetailsComponent,\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<div fxFlex fxLayout fxLayoutAlign=\"center center\">\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"center  center\">\n        <section class=\"signup-form\">\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center  center\">\n                <mat-card class=\"container signup-card\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                    <mat-card-header appearance=\"fill\" class=\"card-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                        Login with your credentials\n                    </mat-card-header>\n                    <div class=\"row\">\n                        <mat-card-content>\n                            <form appearance=\"outline\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\" #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Enter Email</mat-label>\n                                    <input [(ngModel)]=\"loginUserData.email\" name=\"email\" matInput type=\"email\" placeholder=\"Your email\" ngModel email required #emailInput=\"ngModel\" />\n                                    <mat-icon matSuffix>email</mat-icon>\n                                    <mat-error *ngIf=\"emailInput.hasError('required')\">Empty Email</mat-error>\n                                    <mat-error *ngIf=\"!emailInput.hasError('required')\">Invalid Email</mat-error>\n                                </mat-form-field>\n                                <mat-form-field appearance=\"outline\" hintLabel=\"Should be atleast 6 characters long\">\n                                    <mat-label>Enter Password</mat-label>\n                                    <input [(ngModel)]=\"loginUserData.password\" name=\"password\" matInput type=\"password\" placeholder=\"Your password\" ngModel required minLength=\"6\" #pwInput=\"ngModel\" />\n                                    <mat-icon matSuffix>password</mat-icon>\n                                    <mat-hint align=\"end\">{{ pwInput.value?.length }} / 6</mat-hint>\n                                    <mat-error>Small Password!</mat-error>\n                                </mat-form-field>\n\n                                <button (click)=\"_auth.wrongPassword()\" (click)=\"loginUser()\" type=\"submit\" id=\"submit\" class=\"submit-btn\" mat-flat-button [disabled]=\"f.invalid\" style=\"margin-top: 20px\">\n                  Login\n                </button>\n                            </form>\n                        </mat-card-content>\n                    </div>\n                </mat-card>\n            </div>\n        </section>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginUserData = { email: '', password: '' };\n\n  constructor(\n    public _auth: AuthService,\n    private _snackBar: MatSnackBar,\n    private _router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  loginUser() {\n    this._auth.loginUser(this.loginUserData).subscribe(\n      (res) => {\n\n        localStorage.setItem('token', res.token);\n        this._snackBar.open('Login Successful!', 'Clear', { duration: 3000 });\n        this._router.navigate(['/home']);\n      },\n      (err) => console.error(err)\n    );\n  }\n  onSubmit(form: NgForm) {}\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}